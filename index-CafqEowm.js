(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const c of s.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&i(c)}).observe(document,{childList:!0,subtree:!0});function n(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(o){if(o.ep)return;o.ep=!0;const s=n(o);fetch(o.href,s)}})();const a=r=>r.map(([e,...n])=>n?`${e}${n.join(" ")}`:e).join(" "),y=document.querySelector(".viewbox.w"),b=document.querySelector(".viewbox.h"),v=(r,e)=>{const n=a(r),i=`
    <svg width="550" height="500" viewBox="0 0 ${y.value} ${b.value}">
      <path d="${n}" stroke="#fff" fill="#000" />
    </svg>
  `;e.setHTMLUnsafe(i)},z=/^[\t\n\f\r ]*([MLHVZCSQTA])[\t\n\f\r ]*/i,g=/^[01]/,u=/^[+-]?((\d*\.\d+)|(\d+\.)|(\d+))(e[+-]?\d+)?/i,t=u,E=/^(([\t\n\f\r ]+,?[\t\n\f\r ]*)|(,[\t\n\f\r ]*))/,q={M:[t,t],L:[t,t],H:[t],V:[t],Z:[],C:[t,t,t,t,t,t],S:[t,t,t,t],Q:[t,t,t,t],T:[t,t],A:[u,u,t,g,g,t,t]};class p{static components(e,n,i){const o=q[e.toUpperCase()],s=[];for(;i<=n.length;){const c=[e];for(const d of o){const m=n.slice(i).match(d);if(m!==null){c.push(m[0]),i+=m[0].length;const h=n.slice(i).match(E);h!==null&&(i+=h[0].length)}else{if(c.length===1&&s.length>=1)return[i,s];throw new Error(`malformed path (first error at ${i})`)}}if(s.push(c),o.length===0)return[i,s];e==="m"&&(e="l"),e==="M"&&(e="L")}throw new Error(`malformed path (first error at ${i})`)}static parse(e){let n=0,i=[];for(;n<e.length;){const o=e.slice(n).match(z);if(o!==null){const s=o[1];if(n===0&&s.toLowerCase()!=="m")throw new Error(`malformed path (first error at ${n})`);n+=o[0].length;const c=p.components(s,e,n);n=c[0],i=[...i,...c[1]]}else throw new Error(`malformed path (first error at ${n})`)}return i}}const w=(r,e=3)=>p.parse(r).map(([o,...s])=>{const c=s.map(d=>$(d,e));return[o,...c]}),$=(r,e)=>Number(Number(r).toFixed(e)),x=(r,e)=>{e.textContent=a(r)},f=document.querySelector("textarea.source"),C=document.querySelector(".preview"),L=document.querySelector("textarea.optimized"),l=document.querySelector(".precision"),S=document.querySelector(".size"),M=document.querySelectorAll(".viewbox");l.addEventListener("input",()=>{l.nextElementSibling.textContent=l.value;const r=w(f.value,l.value);v(r,C),x(r,L),S.value=a(r).length});f.addEventListener("input",()=>{const r=w(f.value,l.value);v(r,C),x(r,L),S.value=a(r).length});M.forEach(r=>{r.addEventListener("wheel",({deltaY:e})=>{const n=e>0?-1:1;r.value=Math.min(Math.max(1,Number(r.value)+n),2048)})});
